name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Import Code Signing Certificate
      if: runner.os == 'macOS'
      env:
        CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      run: |
        echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        security create-keychain -p actions temp.keychain
        security default-keychain -s temp.keychain
        security unlock-keychain -p actions temp.keychain
        security import certificate.p12 -k temp.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k actions temp.keychain
        rm certificate.p12

    - name: Build application
      run: npm run build

    - name: Package application
      run: npm run make

    - name: List output files
      run: ls -R out/

    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: AirTV-macOS
        path: out/make/**/*.dmg
        if-no-files-found: error

    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: AirTV-macOS-ZIP
        path: out/make/**/*.zip
        if-no-files-found: warn

  release:
    needs: build-macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: AirTV-macOS
        path: artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
